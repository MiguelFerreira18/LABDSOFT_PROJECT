name: CI/CD Pipeline

on:
  workflow_dispatch:
  # NOTE: ONLY CHANGE THIS AFTER THE SECRETS HAVE BEEN CREATED
  pull_request:
    branches:
      - main
jobs:
  buildBackEnd:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.LABDSOFT_DB_DEV_DB_NAME }}
          MYSQL_USER: ${{ secrets.LABDSOFT_DB_USER }}
          MYSQL_PASSWORD: ${{ secrets.LABDSOFT_DB_PASS }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Create .env
        run: |

          cp template.env .env

        working-directory: ./

      - name: Echo .env
        run: cat .env
        working-directory: ./

      - name: Wait for 20 seconds
        run: sleep 10

      - name: Check Database Health
        run: nc -zvw 1 data_labdsoft 3306
        continue-on-error: true
      # Setup java version
      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"
          cache: "maven"
          cache-dependency-path: "./pom.xml"

      - name: Maven Clean
        run: mvn clean
        working-directory: ./

      - name: list files
        run: ls -la
        working-directory: ./
      - name: List files at scripts
        run: ls -la
        working-directory: ./scripts

      - uses: actions/setup-go@v5
        with:
          go-version: "1.16.1"
      - run: go run scripts/run_java_api.go -test=true
        working-directory: ./
      # - name: Maven Package
      #   run: mvn package
      #   working-directory: ./

      - name: Upload Jar
        uses: actions/upload-artifact@v4
        with:
          name: SmartcityAPI
          path: ./target/SmartCityAPI.jar

  push-to-dockerhub:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up node.js 20.11
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"
          cache: "maven"
          cache-dependency-path: "./pom.xml"

      - name: Maven Package
        run: mvn package -DskipTests
        working-directory: ./

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build docker compose file
        run: docker compose build

      - name: Print docker images
        run: docker images

      # - name: Tag Frontend image
      # run: docker tag labdsoft_project-frontend-ionic:latest ${{ secrets.DOCKER_USERNAME }}/desofs2024_m1b_2-desof-web:latest

      - name: Tag Backend image
        run: docker tag labdsoft_project-labdsof-api:latest ${{ secrets.DOCKER_USERNAME }}/flutter-ui:latest

      # - name: Build and push frontend
      #   run: docker push ${{ secrets.DOCKER_USERNAME }}/flutter-ui:latest

      - name: Build and push backend
        run: docker push ${{ secrets.DOCKER_USERNAME }}/smart-city-api:latest

    needs: [buildBackEnd]

  docker-scout-api:
    runs-on: ubuntu-latest

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Docker Scout
        id: docker-scout
        uses: docker/scout-action@v1
        with:
          command: cves,recommendations,quickview
          image: ${{ secrets.DOCKER_USERNAME }}/smart-city-api:latest
          to-latest: true
          ignore-unchanged: true
          write-comment: true
          only-fixed: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
    needs:
      - push-to-dockerhub
